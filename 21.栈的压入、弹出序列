#########题目描述##########

输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）

##########解题思路################

使用一个辅助的栈，按照压入顺序压入数据，每压入一个数据，该栈的栈顶元素都需要和弹出序列的第一个元素进行比较，相同时同时弹出这两个数据（只要栈顶元素和弹出序列的第一个元素相等就弹出）。


#############代码##############

class Solution:
    def IsPopOrder(self, pushV, popV):
        # write code here
        stack = []
        for i in range(len(pushV)):
            stack.append(pushV[i])
            while stack and stack[-1] == popV[0]:
                stack.pop()
                popV.pop(0)
        if not stack:
            return True
        else:
            return False
