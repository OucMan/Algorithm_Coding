#################题目描述#####################

给定一个数组A[0,1,...,n-1],请构建一个数组B[0,1,...,n-1],其中B中的元素B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]。不能使用除法。（注意：规定B[0] = A[1] * A[2] * ... * A[n-1]，B[n-1] = A[0] * A[1] * ... * A[n-2];）

##################解题思路#####################

B[i]分成两部分，前一部分是A[0]至A[i-1]的乘积，后部分是A[i]至A[n-1]的乘积，然后两者相乘。对于前部分，我们可以直接按照从0到n的顺序计算，而后半部分按照从n-1到0的顺序计算。这样的话后面的计算都是在前面计算的基础上进行

################代码##########################

class Solution:
    def multiply(self, A):
        # write code here
        if not A or len(A) <= 0:
            return None
        B = [1] * len(A)
        for i in range(1, len(A)):
            B[i] = B[i-1] * A[i-1]
        temp = 1
        for i in range(len(A)-1, -1, -1):
            B[i] = B[i] * temp
            temp = temp * A[i]
        return B
            
