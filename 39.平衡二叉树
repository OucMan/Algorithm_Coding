#############题目描述###################

输入一棵二叉树，判断该二叉树是否是平衡二叉树。


################解题思路#######################

递归思想，获得左子树和右子树的深度，假如深度之差大于1则返回False，否则继续判断左子树和右子树是否为平衡二叉树

#################代码######################

# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def IsBalanced_Solution(self, pRoot):
        # write code here
        if not pRoot:
            return True
        if abs(self.getDepth(pRoot.left) - self.getDepth(pRoot.right)) <= 1:
            return self.IsBalanced_Solution(pRoot.left) and self.IsBalanced_Solution(pRoot.right)
        else:
            return False
    def getDepth(self, root):
        if not root:
            return 0
        if root and not root.left and not root.right:
            return 1
        return 1 + max(self.getDepth(root.left), self.getDepth(root.right))
