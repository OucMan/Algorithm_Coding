#######题目描述#######

一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。


#########解题思路############

对于n阶楼梯，假设A(n)表示跳法的数量。当青蛙一次跳n阶，则有一种方案；当青蛙一次跳了n-1阶，则走完剩余的一阶楼梯有A(1)中方法；当青蛙一次跳了n-2阶，则走完剩余的2阶楼梯有A(2)种方案；当青蛙一次跳了n-3阶，则走完剩余的3阶楼梯有A(3)种方案...当青蛙一次跳了1阶，则走完剩余的n-1阶楼梯有A(n-1)种方案；则可以得到对于n>=2时：

A(n) = 1 + A(1) + A(2) + A(3) + ... + A(n-1)

对于n=1，则只有一种方案。因此通过循环实现算法

#############代码###########
class Solution:
    def jumpFloorII(self, number):
        # write code here
        if number <= 0:
            return 0
        if number == 1:
            return 1
        a = 1         #A(1)
        sum = 1       #1
        for i in range(2, number+1):
            sum = sum + a
            a = sum
        return sum
