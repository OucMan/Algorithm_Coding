################题目描述#################
给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n>1并且m>1），每段绳子的长度记为k[0],k[1],...,k[m]。请问k[0]xk[1]x...xk[m]可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18

##################解题思路####################
f(n) = max(f(n-i) * f(i)) 1<=i<=n/2+1

因此建立 一个列表从小到大保存f(n)

#####################代码#####################

class Solution:
    def cutRope(self, number):
        # write code here
        if number <= 1:
            return 0
        if number == 2:
            return 1
        if number == 3:
            return 2
        res = [0,1,2,3]
        for i in range(4, number+1):
            max = 0
            for j in range(1, i/2+1):
                tmp = res[j] * res[i-j]
                if tmp > max:
                    max = tmp
            res.append(max)
        return res[number]
