###########题目描述###########

操作给定的二叉树，将其变换为源二叉树的镜像。
输入描述:
二叉树的镜像定义：源二叉树 
    	    8
    	   /  \
    	  6   10
    	 / \  / \
    	5  7 9 11
    	镜像二叉树
    	    8
    	   /  \
    	  10   6
    	 / \  / \
    	11 9 7  5
      
  ###########解题思路###########
  
  根据题目分析，就是将节点的左右节点位置互换，采用递归的方式处理问题
  
  
  ##############代码###############
  
  # class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回镜像树的根节点
    def Mirror(self, root):
        # write code here
        if root == None:
            return None
        temp = root.left
        root.left = root.right
        root.right = temp

        if root.left:
            self.Mirror(root.left)
        if root.right:
            self.Mirror(root.right)
            
        return root
            
            
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
