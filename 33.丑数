###############题目描述##################

把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。


################解题思路####################

一个数是否为丑数的判断：首先一直除以2直到不能整除为止，然后接着除以3，直到不能整除为止，最后接着整除5，直到不能整除为止。如果最后剩下的数为1，则是丑数，否则不是。根据上述步骤，我们可以一个数一个数的判断丑数，但是会超时。

使用一个列表用来按序保存丑数，后一个丑数肯定是由前面某一个丑数乘以2,3或者5产生的。为此我们保存三个指针用来存储分别乘以2,3,5可能会成为下一个丑数的丑数位置。


#################代码####################

class Solution:
    def GetUglyNumber_Solution(self, index):
        # write code here
        if index <= 0:
            return 0
        res = [1]
        count = 1
        t2=t3=t5=0
        while count < index:
            tmp = min([res[t2]*2, res[t3]*3, res[t5]*5])
            res.append(tmp)
            while res[t2]*2 <= tmp:
                t2 = t2 + 1
            while res[t3]*3 <= tmp:
                t3 = t3 + 1
            while res[t5]*5 <= tmp:
                t5 = t5 + 1
            count = count + 1
        return res[-1]
