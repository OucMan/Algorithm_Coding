###############题目描述###################

给定一棵二叉搜索树，请找出其中的第k小的结点。例如，（5，3，7，2，4，6，8）中，按结点数值大小顺序第三小结点的值为4。

#################解题思路#######################

对于二叉搜索树，其中序遍历即为节点按顺序排序的集合。因此可以首先进行中序遍历，然后再找出第k个节点。

但是这需要对整棵树进行遍历。所以通过简单修改中序遍历的代码可以仅仅遍历前k个节点。

####################代码#######################

# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回对应节点TreeNode
    count = 0
    def KthNode(self, pRoot, k):
        # write code here
        if not pRoot or not k:
            return None
        node = self.KthNode(pRoot.left, k)
        if node:
            return node
        self.count = self.count + 1
        if self.count == k:
            return pRoot
        node = self.KthNode(pRoot.right, k)
        if node:
            return node
