############题目描述#############

输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。

##############解题思路################

根据二叉搜索树的大小关系，首先对二叉搜索树进行中序遍历，并将结果存储在列表中，然后依次更改指针

###############代码#################

# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    def Convert(self, pRootOfTree):
        # write code here
        if not pRootOfTree:
            return
        self.attr = []
        self.inOrder(pRootOfTree)
        for i,v in enumerate(self.attr[:-1]):
            self.attr[i].right = self.attr[i+1]
            self.attr[i+1].left = v
        return self.attr[0]
    
    def inOrder(self, root):
        if not root:
            return None
        self.inOrder(root.left)
        self.attr.append(root)
        self.inOrder(root.right)
