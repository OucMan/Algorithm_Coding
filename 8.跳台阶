#########题目描述######

一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。


##########解题思路##########

假设对于n阶的楼梯，有jumpFloor(n)种上楼的方案。青蛙一次可以跳1阶，也可以跳2阶，对于n阶的楼梯，假如青蛙第一次跳了1阶，则对于后面的n-1阶楼梯有jumpFloor(n-1)种上楼的方案；假如青蛙第一次跳了2阶，则对于后面的n-2阶楼梯有jumpFloor(n-2)种上楼的方案，故可以得到jumpFloor(n) = jumpFloor(n-1) + jumpFloor(n-2)，这本质上还是斐波那契数列。因此可以借鉴第7题的解题思路，同理使用递归方式会超时，所以推荐使用循环


#############代码###############

class Solution:
    def jumpFloor(self, number):
        # write code here
        a = 1   #一阶楼梯的方案
        b = 2   #二阶楼梯的方案
        if number <=0 :
            return 0
        if number == 1:
            return a
        if number == 2:
            return b
        for i in range(3, number+1):
            temp = b
            b = a + b
            a = temp
        return b
        
